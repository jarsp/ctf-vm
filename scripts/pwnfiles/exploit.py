from pwn import *

import os
import sys
from pwn_docker import *

###### FILL IN! ######
# Container name
CONT=''
# Path to mount in docker
DOCKER_DIR='/tmp/mnt'
# Path to executable locally
EXE=''
DOCKER_EXE=os.path.join(DOCKER_DIR, EXE)
# Preloads
PRELOAD=''
DOCKER_PRELOAD=' '.join(map(lambda x: os.path.join(DOCKER_DIR, x), PRELOAD.split()))
######################

# Use this instead of gdb.attach()
gdb_attach = gdb.attach



def exploit(r):
    gdb_attach(r)
    r.interactive()



if __name__ == '__main__':
    is_docker = False
    if len(sys.argv) == 3:
        r = remote(sys.argv[1], int(sys.argv[2]))
    elif len(sys.argv) == 2 and sys.argv[1] == 'd':
        is_docker = True
        if PRELOAD is not '':
            r = process_d(CONT, DOCKER_EXE, {'LD_PRELOAD': DOCKER_PRELOAD})
        else:
            r = process_d(CONT, DOCKER_EXE)
    else:
        if PRELOAD is not '':
            r = process(EXE, env={'LD_PRELOAD': PRELOAD})
        else:
            r = process(EXE)

    if is_docker:
        info = pre_exploit_d(CONT, DOCKER_EXE)
        gdb_attach = make_gdb_attach_d(CONT, info)
    try:
        exploit(r)
    finally:
        if is_docker:
            post_exploit_d(CONT, info)
