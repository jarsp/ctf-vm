import XMonad
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.ManageDocks
import XMonad.Layout
import XMonad.Layout.IndependentScreens
import XMonad.Layout.MultiColumns
import XMonad.Layout.ThreeColumns
import XMonad.Util.Run(spawnPipe)
import XMonad.Util.EZConfig(additionalKeys)
import System.IO
import qualified Data.Map as M

main = do
    n <- countScreens
    xmprocs <- mapM (\i -> spawnPipe $ "/usr/bin/xmobar /home/__USER__/.xmobarrc-" ++ show i ++ " -x " ++ show i) [0..n-1]
    spawn "feh --bg-scale \"__INSTALL_DIR__/wallpaper.png\""
    spawn "compton -CG --active-opacity 1.0"
    xmonad $ defaultConfig
        { manageHook = manageDocks <+> manageHook defaultConfig
        --, layoutHook = avoidStruts  $  Tall 1 (3/100) (1/2) ||| (Mirror $ Tall 1 (3/100) (1/3)) ||| ThreeColMid 1 (3/100) (1/3) ||| Full
        , layoutHook = avoidStruts  $  Tall 1 (3/100) (1/2) ||| (Mirror $ Tall 1 (3/100) (1/3)) ||| ThreeColMid 1 (3/100) (1/3) ||| Full
        , handleEventHook = handleEventHook defaultConfig <+> docksEventHook
        , logHook    = mapM_ (\handle -> dynamicLogWithPP $ xmobarPP { ppOutput = hPutStrLn handle , ppTitle  = xmobarColor "green" "" . shorten 50 }) xmprocs
        , modMask    = mod4Mask
        , terminal   = "st"
        , keys = \c -> myKeys c `M.union` keys defaultConfig c
        , focusedBorderColor = "lightgreen"
        , normalBorderColor = "darkgreen"
        }
  where myKeys (XConfig {modMask = modm}) = M.fromList $ [ ((modm, xK_x), sendMessage ToggleStruts)
                                                         , ((modm .|. shiftMask, xK_Return), spawn "st")
                                                         ]
